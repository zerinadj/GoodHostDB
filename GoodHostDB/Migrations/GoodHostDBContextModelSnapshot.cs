// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekat_1.Data;

namespace Projekat_1.Migrations
{
    [DbContext(typeof(Projekat_1Context))]
    partial class Projekat_1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projekat_1.Models.Address", b =>
                {
                    b.Property<int>("IdAddress")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .HasMaxLength(50);

                    b.Property<int>("Number");

                    b.HasKey("IdAddress");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Projekat_1.Models.Device", b =>
                {
                    b.Property<int>("IdDevice")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("IdDevice");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Projekat_1.Models.Offer", b =>
                {
                    b.Property<int>("IdOffer")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("PlaceId");

                    b.Property<int>("RentId");

                    b.Property<int>("UserRoleId");

                    b.HasKey("IdOffer");

                    b.HasIndex("PlaceId");

                    b.HasIndex("RentId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Offer");
                });

            modelBuilder.Entity("Projekat_1.Models.Place", b =>
                {
                    b.Property<int>("IdPlace")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<bool?>("Availability");

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<int?>("MaxOfGuests");

                    b.Property<int?>("Price");

                    b.Property<int?>("Rooms");

                    b.HasKey("IdPlace");

                    b.HasIndex("AddressId");

                    b.ToTable("Place");
                });

            modelBuilder.Entity("Projekat_1.Models.Rating", b =>
                {
                    b.Property<int>("IdRating")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Accuracy");

                    b.Property<int>("Cleanliness");

                    b.Property<int>("Communication");

                    b.Property<int>("HostRate");

                    b.Property<int>("Location");

                    b.Property<int>("Value");

                    b.HasKey("IdRating");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("Projekat_1.Models.Rent", b =>
                {
                    b.Property<int>("IdRent")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CheckIn")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CheckOut")
                        .HasColumnType("date");

                    b.HasKey("IdRent");

                    b.ToTable("Rent");
                });

            modelBuilder.Entity("Projekat_1.Models.Review", b =>
                {
                    b.Property<int>("IdReview")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("OfferId");

                    b.Property<int>("RatingId");

                    b.Property<int>("UserRoleId");

                    b.HasKey("IdReview");

                    b.HasIndex("OfferId");

                    b.HasIndex("RatingId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("Projekat_1.Models.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("IdRole");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Projekat_1.Models.Spec", b =>
                {
                    b.Property<int>("IdSpecs")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amenities")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("date");

                    b.HasKey("IdSpecs");

                    b.ToTable("Specs");
                });

            modelBuilder.Entity("Projekat_1.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<int?>("IdDevice");

                    b.Property<DateTime?>("LastLog")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("date");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("IdDevice");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Projekat_1.Models.UserRole", b =>
                {
                    b.Property<int>("IdURole")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdRole");

                    b.Property<int>("IdUser");

                    b.Property<int?>("UserId");

                    b.HasKey("IdURole");

                    b.HasIndex("IdRole");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Projekat_1.Models.Offer", b =>
                {
                    b.HasOne("Projekat_1.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Projekat_1.Models.Rent", "Rent")
                        .WithMany()
                        .HasForeignKey("RentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Projekat_1.Models.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projekat_1.Models.Place", b =>
                {
                    b.HasOne("Projekat_1.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projekat_1.Models.Review", b =>
                {
                    b.HasOne("Projekat_1.Models.Offer", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Projekat_1.Models.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projekat_1.Models.User", b =>
                {
                    b.HasOne("Projekat_1.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("IdDevice");
                });

            modelBuilder.Entity("Projekat_1.Models.UserRole", b =>
                {
                    b.HasOne("Projekat_1.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Projekat_1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
